/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.ImageIcon;
import java.awt.Image;
import java.net.URL;

/**
 *
 * @author andyderispas
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    //* Generated Code
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        appLabel = new javax.swing.JLabel();
        imagePanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diagnoseResultTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        symptomComboBox = new javax.swing.JComboBox<>();
        diagnoseButton = new javax.swing.JButton();
        qnaButton = new javax.swing.JButton();
        howButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Garden Expert System");
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.white);
        setLocation(new java.awt.Point(360, 125));

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        appLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        appLabel.setForeground(new java.awt.Color(0, 0, 0));
        appLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appLabel.setText("Home Garden Expert System");
        appLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        imagePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/default.png"))); // NOI18N
        imageLabel.setAlignmentY(0.0F);
        imageLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 752, Short.MAX_VALUE)
            .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE))
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
            .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(imageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
        );

        // Initialize diagnoseResultTextArea
        diagnoseResultTextArea = new javax.swing.JTextArea();
        diagnoseResultTextArea.setColumns(20);
        diagnoseResultTextArea.setRows(10);
        diagnoseResultTextArea.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // Set font size
        diagnoseResultTextArea.setEditable(false);
        diagnoseResultTextArea.setLineWrap(true); // Enable line wrapping
        diagnoseResultTextArea.setWrapStyleWord(true); // Enable word wrapping

        // Add diagnoseResultTextArea to JScrollPane
        jScrollPane1 = new javax.swing.JScrollPane(diagnoseResultTextArea);

        // Add JScrollPane to layout
        jPanel1.add(jScrollPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(appLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(javax.swing.UIManager.getDefaults().getColor("ComboBox.buttonPressedArrowColor"));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        symptomComboBox.setBackground(new java.awt.Color(255, 255, 255));
        symptomComboBox.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        symptomComboBox.setForeground(new java.awt.Color(255, 255, 255));
        symptomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select Symptom---", "Soil is wet AND leaves are yellow", "Soil is dry AND leaves are wilting", "Leaves have white powdery spots", "Leaves have holes AND insects are present", "Leaves are pale AND plant shows stunted growth", "No clear symptoms detected", "Soil is soggy AND roots are dark or mushy", "Plant is leggy AND leaves are yellowing" }));
        symptomComboBox.setToolTipText("");
        symptomComboBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        symptomComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                symptomComboBoxItemStateChanged(evt);
            }
        });
        symptomComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symptomComboBoxActionPerformed(evt);
            }
        });

        diagnoseButton.setBackground(new java.awt.Color(153, 255, 0));
        diagnoseButton.setForeground(new java.awt.Color(0, 0, 0));
        diagnoseButton.setText("Diagnose");
        diagnoseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnoseButtonActionPerformed(evt);
            }
        });

        qnaButton.setBackground(java.awt.Color.orange);
        qnaButton.setForeground(new java.awt.Color(0, 0, 0));
        qnaButton.setText("Q&A");
        qnaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qnaButtonActionPerformed(evt);
            }
        });

        howButton.setBackground(new java.awt.Color(255, 255, 255));
        howButton.setForeground(new java.awt.Color(0, 0, 0));
        howButton.setText("How");
        howButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howButtonActionPerformed(evt);
            }
        });

        aboutButton.setBackground(new java.awt.Color(255, 255, 255));
        aboutButton.setForeground(new java.awt.Color(0, 0, 0));
        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(255, 77, 0));
        exitButton.setForeground(new java.awt.Color(0, 0, 0));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(symptomComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(diagnoseButton)
                        .addGap(18, 18, 18)
                        .addComponent(qnaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(howButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(symptomComboBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diagnoseButton)
                    .addComponent(qnaButton)
                    .addComponent(aboutButton)
                    .addComponent(exitButton)
                    .addComponent(howButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void diagnoseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnoseButtonActionPerformed
        // Display loading message
        diagnoseResultTextArea.setText("Loading...");
        imageLabel.setText("Loading...");
        imageLabel.setIcon(null);

        // Use SwingWorker to run the diagnosis process in a separate thread
        new javax.swing.SwingWorker<Void, Void>() {
            private String diagnosis = "";
            private String solution = "";
            private String imagePath = "";

            @Override
            protected Void doInBackground() throws Exception {
                // Add a 2-second delay to simulate loading animation
                Thread.sleep(2000);

                // Get the selected symptom from the combo box
                String selectedSymptom = (String) symptomComboBox.getSelectedItem();

                // Diagnosis logic based on the selected symptom
                switch (selectedSymptom) {
                    case "Soil is wet AND leaves are yellow":
                        diagnosis = "Overwatering";
                        solution = "Reduce watering.";
                        imagePath = "/images/overwatering.png";
                        break;
                    case "Soil is dry AND leaves are wilting":
                        diagnosis = "Underwatering";
                        solution = "Increase watering frequency.";
                        imagePath = "/images/underwatering.png";
                        break;
                    case "Leaves have white powdery spots":
                        diagnosis = "Powdery Mildew";
                        solution = "Apply fungicide.";
                        imagePath = "/images/powdery_mildew.png";
                        break;
                    case "Leaves have holes AND insects are present":
                        diagnosis = "Insect Infestation";
                        solution = "Apply organic pesticide.";
                        imagePath = "/images/insect_infestation.png";
                        break;
                    case "Leaves are pale AND plant shows stunted growth":
                        diagnosis = "Nitrogen Deficiency";
                        solution = "Apply nitrogen-rich fertilizer.";
                        imagePath = "/images/nitrogen_deficiency.png";
                        break;
                    case "Soil is soggy AND roots are dark or mushy":
                        diagnosis = "Root Rot";
                        solution = "Remove affected roots and reduce watering.";
                        imagePath = "/images/root_rot.png";
                        break;
                    case "Plant is leggy AND leaves are yellowing":
                        diagnosis = "Lack of Sunlight";
                        solution = "Move the plant to a sunnier location.";
                        imagePath = "/images/lack_of_sunlight.png";
                        break;
                    default:
                        diagnosis = "Unknown Symptom";
                        solution = "Please select a valid symptom.";
                        imagePath = "/images/default.png"; // Default image if the symptom is not recognized
                        break;
                }
                return null;
            }

            @Override
            protected void done() {
                // Display the diagnosis and solution in the text area
                diagnoseResultTextArea.setText("Diagnosis: " + diagnosis + "\nSolution: " + solution);

                // Display the image in imageLabel with the appropriate size
                try {
                    URL imageUrl = getClass().getResource(imagePath);
                    if (imageUrl != null) {
                        ImageIcon originalIcon = new ImageIcon(imageUrl);
                        Image scaledImage = originalIcon.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon scaledIcon = new ImageIcon(scaledImage);
                        imageLabel.setIcon(scaledIcon);
                        imageLabel.setText(""); // Remove "Loading..." text
                    } else {
                        imageLabel.setText("Image not found");
                    }
                } catch (Exception e) {
                    imageLabel.setText("Error loading image");
                    e.printStackTrace();
                }
            }
        }.execute();
    }//GEN-LAST:event_diagnoseButtonActionPerformed

    private void qnaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qnaButtonActionPerformed
        // Tampilkan daftar Q&A di diagnoseResultTextArea
        diagnoseResultTextArea.setText(
            "Q1: What should I do if my plant leaves turn yellow?\n" +
            "A1: Yellowing leaves can be caused by a variety of issues. Common reasons include overwatering, underwatering, nutrient deficiencies, or pest damage.\n" +
            "First, check the soil moisture to determine if you are over or underwatering. If the soil is soggy, consider adjusting your watering schedule and ensuring the plant has proper drainage.\n" +
            "If the soil is dry, increase the watering frequency. Also, make sure your plant is getting adequate sunlight, as yellow leaves can be a sign of insufficient light.\n\n" +

            "Q2: How can I tell if my plant has root rot?\n" +
            "A2: Root rot typically occurs when the plant's roots are exposed to excessive moisture over time, preventing them from getting the oxygen they need.\n" +
            "If you notice dark, mushy roots when repotting your plant or a foul odor coming from the soil, this is a strong indication of root rot.\n" +
            "To address root rot, remove the affected roots with clean scissors or pruning shears, then repot the plant in fresh, well-draining soil.\n" +
            "Be sure to avoid overwatering in the future to prevent root rot from recurring.\n\n" +

            "Q3: My plant has tiny spots on its leaves. What should I do?\n" +
            "A3: Tiny spots on leaves could be a sign of various issues, including fungal infections, pest damage, or nutrient imbalances.\n" +
            "First, check for signs of pests such as aphids or spider mites. If insects are present, treat the plant with an organic insecticide or neem oil.\n" +
            "If the spots are caused by fungal infections like powdery mildew, you can treat the plant with a fungicide or remove the affected leaves to prevent the spread of the disease.\n" +
            "Make sure your plant has adequate airflow and avoid excessive humidity, as these conditions promote fungal growth.\n\n" +

            "Q4: How can I tell if my plant is getting enough sunlight?\n" +
            "A4: Plants need adequate light to perform photosynthesis, which is essential for their growth.\n" +
            "If your plant has leggy growth (long, thin stems with spaced-out leaves), it is likely not receiving enough light.\n" +
            "You can move the plant to a brighter location or use grow lights to supplement natural light.\n" +
            "Different plants have different light requirements, so make sure you research the ideal conditions for your specific plant species.\n" +
            "Generally, plants need 6-8 hours of sunlight per day. If you notice that the leaves are turning yellow or the plant is growing toward the light, it is a sign that it is seeking more light.\n\n" +

            "Q5: How often should I water my plants?\n" +
            "A5: The frequency of watering depends on the type of plant, the environment, and the time of year.\n" +
            "As a general rule, allow the soil to dry out between waterings. If the soil is dry to the touch, it's time to water.\n" +
            "Some plants prefer to be watered more frequently, while others need less. Be sure to check the moisture level in the soil regularly, and adjust your watering schedule based on the plant’s needs.\n" +
            "Overwatering is just as harmful as underwatering, so always ensure the plant’s pot has good drainage to avoid waterlogged soil.\n"
        );
    }//GEN-LAST:event_qnaButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // Menampilkan pesan tentang aplikasi
        javax.swing.JOptionPane.showMessageDialog(this, 
            "Garden Expert System helps diagnose common home garden problems based on symptoms.\n" +
            "Created to promote healthy gardening practices and support plant lovers everywhere.", 
            "About Garden Expert System", 
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // Keluar dari aplikasi
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void symptomComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symptomComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_symptomComboBoxActionPerformed

    private void symptomComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_symptomComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_symptomComboBoxItemStateChanged

    private void howButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howButtonActionPerformed
        // Display gardening tips in diagnoseResultTextArea
        diagnoseResultTextArea.setText(
            "Tip 1: Watering\n" +
            "Proper watering is essential for plant health. Ensure that the water reaches the root system and allow the soil to dry out between waterings. Different plants have different water requirements, so make sure to research the specific needs of each species. As a rule of thumb, check the top 1-2 inches of soil; if it's dry, it's time to water.\n\n" +

            "Tip 2: Light Requirements\n" +
            "Every plant has its preferred amount of sunlight. Some plants thrive in full sun, while others prefer low light conditions. Observe your plant's growth habits: if it is leaning towards the light or becoming leggy, it may need more light. Conversely, if the leaves are scorched or the plant seems stressed, it may be getting too much light. Adjust the plant's placement accordingly.\n\n" +

            "Tip 3: Fertilization\n" +
            "Fertilizing your plant provides essential nutrients that help it grow strong and healthy. Use a balanced fertilizer that contains nitrogen, phosphorus, and potassium. During the growing season (typically spring and summer), fertilize once a month. During the dormant season (fall and winter), reduce fertilization frequency as most plants slow down their growth.\n\n" +

            "Tip 4: Pruning\n" +
            "Pruning is an important part of plant care that helps to promote healthy growth. Remove dead or yellowing leaves, and trim back overgrown stems to encourage bushier growth. For flowering plants, deadhead the spent flowers to encourage new blooms. Pruning also helps improve air circulation, preventing diseases from spreading.\n\n" +

            "Tip 5: Repotting\n" +
            "Repotting is necessary when a plant has outgrown its pot or when the soil has become compacted. Choose a pot that is 1-2 inches larger than the current pot. Repotting is typically done in spring, just before the growing season begins. When repotting, refresh the soil to provide fresh nutrients and improve drainage. Be sure to handle the roots gently and avoid over-stressing the plant.\n\n" +

            "Tip 6: Pest Control\n" +
            "Inspect your plants regularly for signs of pests such as aphids, spider mites, or scale insects. If you find pests, remove them with a soft cloth or cotton swab dipped in rubbing alcohol. For larger infestations, you can treat the plant with an organic pesticide or neem oil. Ensure that you thoroughly check both the upper and lower sides of the leaves and the soil for any pests.\n\n" +

            "Tip 7: Temperature and Humidity\n" +
            "Most houseplants prefer moderate temperatures (15−24∘C or 60−75∘F). Avoid placing plants near heat sources, such as radiators or vents, as this can stress them out. Plants that require higher humidity, such as ferns or tropical plants, can benefit from misting or being placed on a humidity tray. Alternatively, you can use a humidifier to increase the humidity in the room.\n\n" +

            "Tip 8: Seasonal Care\n" +
            "Plants may need extra care depending on the season. During winter, many plants enter a dormant state and require less water and fertilization. During summer, plants may need more frequent watering and additional feeding. Adjust your care routine accordingly to match the plant's seasonal needs.\n"
        );
    }//GEN-LAST:event_howButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Show confirmation dialog with custom options */
        Object[] options = {"START", "NO"};
        int response = javax.swing.JOptionPane.showOptionDialog(
            null, 
            "Welcome to the Garden Expert System!\nDo you want to start?", 
            "Start Confirmation", 
            javax.swing.JOptionPane.YES_NO_OPTION, 
            javax.swing.JOptionPane.QUESTION_MESSAGE, 
            null, 
            options, 
            options[0]
        );

        if (response == javax.swing.JOptionPane.YES_OPTION) {
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new MainUI().setVisible(true);
                }
            });
        } else {
            // Exit the program if the user selects "NO"
            System.exit(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JLabel appLabel;
    private javax.swing.JButton diagnoseButton;
    private javax.swing.JTextArea diagnoseResultTextArea;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton howButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton qnaButton;
    private javax.swing.JComboBox<String> symptomComboBox;
    // End of variables declaration//GEN-END:variables

    private void resizeImage() {
        if (imageLabel.getIcon() != null) {
            ImageIcon originalIcon = (ImageIcon) imageLabel.getIcon();
            Image scaledImage = originalIcon.getImage().getScaledInstance(
                imagePanel.getWidth(), imagePanel.getHeight(), Image.SCALE_SMOOTH
            );
            imageLabel.setIcon(new ImageIcon(scaledImage));
        }
    }
}
