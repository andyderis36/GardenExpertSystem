/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author andyderispas
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    //* Generated Code
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        appLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diagnoseResultTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        diagnoseButton = new javax.swing.JButton();
        qnaButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        symptomComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Garden Expert System");
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.white);
        setLocation(new java.awt.Point(360, 125));

        jPanel1.setBackground(new java.awt.Color(153, 255, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        appLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        appLabel.setForeground(new java.awt.Color(0, 0, 0));
        appLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appLabel.setText("Home Garden Expert System");
        appLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        diagnoseResultTextArea.setEditable(false);
        diagnoseResultTextArea.setBackground(new java.awt.Color(255, 255, 255));
        diagnoseResultTextArea.setColumns(20);
        diagnoseResultTextArea.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        diagnoseResultTextArea.setRows(5);
        diagnoseResultTextArea.setText("Diagnose Result");
        diagnoseResultTextArea.setBorder(null);
        jScrollPane1.setViewportView(diagnoseResultTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                    .addComponent(appLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(javax.swing.UIManager.getDefaults().getColor("ComboBox.buttonPressedArrowColor"));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        diagnoseButton.setBackground(new java.awt.Color(153, 255, 0));
        diagnoseButton.setForeground(new java.awt.Color(0, 0, 0));
        diagnoseButton.setText("Diagnose");
        diagnoseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnoseButtonActionPerformed(evt);
            }
        });

        qnaButton.setBackground(new java.awt.Color(255, 255, 255));
        qnaButton.setForeground(new java.awt.Color(0, 0, 0));
        qnaButton.setText("Q&A");
        qnaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qnaButtonActionPerformed(evt);
            }
        });

        aboutButton.setBackground(new java.awt.Color(255, 255, 255));
        aboutButton.setForeground(new java.awt.Color(0, 0, 0));
        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(255, 77, 0));
        exitButton.setForeground(new java.awt.Color(0, 0, 0));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        symptomComboBox.setBackground(new java.awt.Color(255, 255, 255));
        symptomComboBox.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        symptomComboBox.setForeground(new java.awt.Color(255, 255, 255));
        symptomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soil is wet AND leaves are yellow", "Soil is dry AND leaves are wilting", "Leaves have white powdery spots", "Leaves have holes AND insects are present", "Leaves are pale AND plant shows stunted growth", "No clear symptoms detected", "Soil is soggy AND roots are dark or mushy", "Plant is leggy AND leaves are yellowing" }));
        symptomComboBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        symptomComboBox.setName(""); // NOI18N
        symptomComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                symptomComboBoxItemStateChanged(evt);
            }
        });
        symptomComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symptomComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(symptomComboBox, 0, 707, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(diagnoseButton)
                        .addGap(18, 18, 18)
                        .addComponent(qnaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(symptomComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diagnoseButton)
                    .addComponent(qnaButton)
                    .addComponent(aboutButton)
                    .addComponent(exitButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void diagnoseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnoseButtonActionPerformed
        // Ambil gejala yang dipilih dari combo box
        String selectedSymptom = (String) symptomComboBox.getSelectedItem();

        // Tampilkan pesan loading di text area
        diagnoseResultTextArea.setText("Loading diagnosis...");

        // Gunakan SwingWorker untuk menjalankan proses diagnosis di thread terpisah
        new javax.swing.SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                // Tambahkan jeda 2 detik untuk simulasi animasi loading
                Thread.sleep(2000);
                return null;
            }

            @Override
            protected void done() {
                // Variabel untuk diagnosis dan solusi
                String diagnosis = "";
                String solution = "";

                // Logika diagnosis berdasarkan aturan
                switch (selectedSymptom) {
                    case "Soil is wet AND leaves are yellow":
                        diagnosis = "Overwatering";
                        solution = "Reduce watering.";
                        break;
                    case "Soil is dry AND leaves are wilting":
                        diagnosis = "Underwatering";
                        solution = "Increase watering frequency.";
                        break;
                    case "Leaves have white powdery spots":
                        diagnosis = "Powdery Mildew";
                        solution = "Apply fungicide.";
                        break;
                    case "Leaves have holes AND insects are present":
                        diagnosis = "Insect Infestation";
                        solution = "Apply organic pesticide.";
                        break;
                    case "Leaves are pale AND plant shows stunted growth":
                        diagnosis = "Nitrogen Deficiency";
                        solution = "Apply nitrogen-rich fertilizer.";
                        break;
                    case "No clear symptoms detected":
                        diagnosis = "Unknown Issue";
                        solution = "Consult a gardening expert or re-observe the plant's condition.";
                        break;
                    case "Soil is soggy AND roots are dark or mushy":
                        diagnosis = "Root Rot";
                        solution = "Remove affected roots and reduce watering.";
                        break;
                    case "Plant is leggy AND leaves are yellowing":
                        diagnosis = "Lack of Sunlight";
                        solution = "Move the plant to a sunnier location.";
                        break;
                    default:
                        diagnosis = "Unknown Symptom";
                        solution = "Please select a valid symptom.";
                        break;
                }

                // Tampilkan diagnosis dan solusi di text area
                diagnoseResultTextArea.setText("Diagnosis: " + diagnosis + "\nSolution: " + solution);
            }
        }.execute();
    }//GEN-LAST:event_diagnoseButtonActionPerformed

    private void qnaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qnaButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qnaButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // Menampilkan pesan tentang aplikasi
        javax.swing.JOptionPane.showMessageDialog(this, 
            "Garden Expert System helps diagnose common home garden problems based on symptoms.\n" +
            "Created to promote healthy gardening practices and support plant lovers everywhere.", 
            "About Garden Expert System", 
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // Keluar dari aplikasi
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void symptomComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symptomComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_symptomComboBoxActionPerformed

    private void symptomComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_symptomComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_symptomComboBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Show confirmation dialog with custom options */
        Object[] options = {"START", "NO"};
        int response = javax.swing.JOptionPane.showOptionDialog(
            null, 
            "Welcome to the Garden Expert System!\nDo you want to start?", 
            "Start Confirmation", 
            javax.swing.JOptionPane.YES_NO_OPTION, 
            javax.swing.JOptionPane.QUESTION_MESSAGE, 
            null, 
            options, 
            options[0]
        );

        if (response == javax.swing.JOptionPane.YES_OPTION) {
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new MainUI().setVisible(true);
                }
            });
        } else {
            // Exit the program if the user selects "NO"
            System.exit(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JLabel appLabel;
    private javax.swing.JButton diagnoseButton;
    private javax.swing.JTextArea diagnoseResultTextArea;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton qnaButton;
    private javax.swing.JComboBox<String> symptomComboBox;
    // End of variables declaration//GEN-END:variables
}
